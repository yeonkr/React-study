{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/react-udemy/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    return () => {};\n  }, [enteredPassword]); // 의존성을 추가해 스테이트가 변경될때마다 이펙트실행이 표시된다. 이메일칸에 키를 입력해도 안뜨고 비번칸에만 왜냐면 비번칸만 의존성을 추가했으니까.\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6); // 이 코드는 모든 키 입력에 대해 한번만 실행된다. 수십개가 아니라. 굳\n    }, 500);\n    return () => {\n      clearTimeout(identifier); //\n    }; // 클린업함수. 클린업프로세스로서 실행됨 유즈이펙트가 다음번에 이 함수를 실행하기 전까지.\n    // 이 함수는 유즈에픅트 함수가 실행될때 처음 실행되는 경우를 제외하고 실행됨.\n    // 클린업함수는 첫번째 사이드이펙트함수가 실행되기 전엔 실행되지 않음. 그후에 실행됨\n  }, [setFormIsValid, enteredEmail, enteredPassword]); //setFormIsValids는 실행하지않음.  함수 그 자체를 의존성으로 추가한다. 생략도 가능한데 이런 스테이트 업뎃 함수는 기본적으로 리액트에 의해 절대 변경되지 않기때문\n  // 그래서 생략가능. 엔터이메일, 엔터패스워드는 바뀔 수 있음\n  // 유즈이펙트는 사이드이펙트(http리퀘스트, 키입력을 듣고 입력된 데이터를 저장)를 처리하게 위해 사용함.\n  // 즉 키 입력에 대한 응답으로 해당폼의 유효성을 확인하고 업데이트하는 것이 사이드이펙트다. 사용자 입력데이터의 사이드이펙트다.\n  // 유즈이펙트는 무언가에 대한 응답으로 실행되는 코드를 다루는데 도움된다.\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes(\"@\"));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"VgVYQBA3mdB3InSD0thz8E6O5tM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","identifier","setTimeout","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/macbook/Desktop/react-udemy/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    return () => {};\n  }, [enteredPassword]); // 의존성을 추가해 스테이트가 변경될때마다 이펙트실행이 표시된다. 이메일칸에 키를 입력해도 안뜨고 비번칸에만 왜냐면 비번칸만 의존성을 추가했으니까.\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(\n        enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      ); // 이 코드는 모든 키 입력에 대해 한번만 실행된다. 수십개가 아니라. 굳\n    }, 500);\n\n    return () => {\n      clearTimeout(identifier); //\n    }; // 클린업함수. 클린업프로세스로서 실행됨 유즈이펙트가 다음번에 이 함수를 실행하기 전까지.\n    // 이 함수는 유즈에픅트 함수가 실행될때 처음 실행되는 경우를 제외하고 실행됨.\n    // 클린업함수는 첫번째 사이드이펙트함수가 실행되기 전엔 실행되지 않음. 그후에 실행됨\n  }, [setFormIsValid, enteredEmail, enteredPassword]);\n  //setFormIsValids는 실행하지않음.  함수 그 자체를 의존성으로 추가한다. 생략도 가능한데 이런 스테이트 업뎃 함수는 기본적으로 리액트에 의해 절대 변경되지 않기때문\n  // 그래서 생략가능. 엔터이메일, 엔터패스워드는 바뀔 수 있음\n  // 유즈이펙트는 사이드이펙트(http리퀘스트, 키입력을 듣고 입력된 데이터를 저장)를 처리하게 위해 사용함.\n  // 즉 키 입력에 대한 응답으로 해당폼의 유효성을 확인하고 업데이트하는 것이 사이드이펙트다. 사용자 입력데이터의 사이드이펙트다.\n  // 유즈이펙트는 무언가에 대한 응답으로 실행되는 코드를 다루는데 도움된다.\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes(\"@\")\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}